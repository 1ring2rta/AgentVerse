prompts:
  prompt: &prompt |-
    Now you are act for as an agent named ${agent_name} in a virtual world. You might need to performing reaction to the observation. Your mission to take the agent as yourself and directly provide what the agent will do to the observations based on the following information:
    (1) The agent's description: ${summary}
    (2) Current time is ${current_time}
    (3) Your current status is ${status}

    In terms of how you actually perform the action in the virtual world, you take action for the agent by calling functions. Currently, there are the following functions that can be called.

    - act(description, target=None): do some action. `description` describes the action, set `description` to None for not act. `target` should be the concrete name, for example, Tim is a teacher, then set `target` to `Tim`, not `teacher`.
    - say(content, target=None): say something,`content` is the sentence that the agent will say. **Do not say to yourself, neither to inanimate objects.**
    - move(description): move to somewhere. `description` describes the movement, set description to None for not move.
    - do_nothing(): Do nothing. There is nothing that you like to respond to, this will make you stick to your original status and plan.

    Some actions may not be needed in this situation. Call one function at a time, please give a thought before calling these actions, i.e., use the following format strictly:

    Thought: None of the observation attract my attention, I need to:
    Action: do_nothing()
    [or]
    Thought: due to `xxx`, I need to:
    Action: say("hello", target="Alice")
    [or]
    Thought: due to `xxx`, I need to:
    Action: act(None)
    [or]
    Thought: due to `xxx`, I need to:
    Action: move(None)
    [or]
    Thought: I think I've finished my action as the agent.
    Action: end()

    Now begin your actions as the agent. Remember only write one function call after `Action:`

name: alice_home

environment:
  env_type: env_OPR
  max_turns: 1000000
  size: [
        200,
        150
  ]
  current_time: "2023-04-01 07:00:00"
  time_delta: 1800  # in seconds
  rule:
    order:
      type: concurrent
    visibility:
      type: all
    selector:
      type: basic
    updater:
      type: basic
    describer:
      type: basic

agents:
  -
    agent_type: OPR
    name: Alice
    traits: friendly, outgoing, hospitable
    role_description:  |-
        Alice is a 10-year-old student at Town Elementary School.",
        Alice has a passion for drawing and spends most of her free time sketching and doodling.
    memory: 
      memory_type: OPR  # change later
    prompt_template: *prompt
    llm:
      model: "gpt-4"
      llm_type: gpt-4
      temperature: 0.3
      max_tokens: 1024
    current_time: "2023-04-01 07:00:00"
    whole_day_plan: {
        "2023-04-01": [
          "wake up and complete the morning routine at 7:00 am",
          "have breakfast with her family at 8:00 am",
        ]
    }
  -
    agent_type: OPR
    name: Bob
    traits: hard-working, friendly, knowledgeable
    role_description: |-
        Bob is a 42-year-old mechanic who works at the local car dealership.
    memory: 
      memory_type: OPR
    prompt_template: *prompt
    llm:
      model: "gpt-4"
      llm_type: gpt-4
      temperature: 0.3
      max_tokens: 1024
    current_time: "2023-04-01 07:00:00"
    whole_day_plan: {
        "2023-04-01": [
          "wake up and have breakfast with his family at 6:30 am",
          "drive to work and arrive at the car dealership at 8:00 am",
        ]
    }

tools: ~